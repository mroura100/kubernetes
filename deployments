#Ejemplo de deployment en modo declarativo, el que se debe utilizar, se crea con ficheros .yaml
apiVersion: apps/v1 # i se Usa apps/v1beta2 para versiones anteriores a 1.9.0
kind: Deployment
metadata:
  name: nginx-d
  labels:
    estado: "1"
spec:
  selector:   #permite seleccionar un conjunto de objetos que cumplan las condicione
    matchLabels:
      app: nginx
  replicas: 5 # indica al controlador que ejecute 2 pods
  template:   # Plantilla que define los containers
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:1.7.9
        ports:
        - containerPort: 80
        resources:
          limits:
              memory: "200mi"
              cpu: "2"
          requests:
              memory: "100mi" 
              cpu: "0.5"


#Crear un deployment en modo declarativo
kubectl apply -f deployNginx.yaml

#Crear un deployment en modo imperativo
kubectl create deployment apache --image=httpd

#Mostrar los deployment
kubectl get deploy

#Mostrar los replica set
kubectl get rs

#Mostrar los pods
kubectl get pods

#Editar un deployment
kubectl edit deploy nginx-d 

#Mostrar la informaci√≥n de un deployment
kubectl describe deploy apache

#Escalar un Deployment
kubectl scale deploy -l estado=1 --replicas=10

